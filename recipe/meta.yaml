{% set name = "dolfinx_mpc" %}
{% set version = "0.9.1" %}
{% set major_minor = version.rsplit(".", 1)[0] %}

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
  url: https://github.com/jorgensd/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 2d0c3583b8d69ad4374b0938cd157c9ca48acf50d6969e51ccce8ab14625040e

build:
  number: 1
  skip: true  # [win or py<39]
  force_use_keys:
    # required for the py< above to actually skip builds
    - python

outputs:
  - name: libdolfinx_mpc
    script: build-cpp.sh
    build:
      run_exports:
        - {{ pin_subpackage("libdolfinx_mpc", max_pin="x.x") }}
      force_use_keys:
        - python

    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
        - cmake
        - make
        - pkg-config
        - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]
      host:
        - fenics-libdolfinx {{ major_minor }}
        - fenics-libbasix {{ major_minor }}
        - fenics-ufcx {{ major_minor }}
        - {{ mpi }}
        - petsc
        - petsc * {{ scalar }}_*
      run:
        - fenics-libdolfinx
        - fenics-libbasix
        - {{ mpi }}
        - petsc
    test:
      commands:
        - test -f $PREFIX/lib/libdolfinx_mpc${SHLIB_EXT}

  - name: dolfinx_mpc
    script: build-py.sh

    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - cmake
        - make
        - pkg-config
        - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]
        - cross-python_{{ target_platform }}  # [build_platform != target_platform]
        - python  # [build_platform != target_platform]
        - nanobind  # [build_platform != target_platform]
      host:
        - {{ pin_subpackage("libdolfinx_mpc", exact=True) }}
        - fenics-libbasix {{ major_minor }}
        - fenics-basix {{ major_minor }}
        - fenics-libdolfinx {{ major_minor }}
        - fenics-dolfinx {{ major_minor }}
        - fmt
        - {{ mpi }}
        - spdlog
        - petsc
        - petsc * {{ scalar }}_*
        - pip
        - python
        - scikit-build-core
        - nanobind
      run:
        - {{ pin_subpackage("libdolfinx_mpc", exact=True) }}
        - fenics-basix
        - fenics-dolfinx
        - {{ mpi }}
        - numpy >=1.21
        - python
      run_constrained:
        - {{ pin_compatible("nanobind", "x.x") }}

    test:
      source_files:
        - python/tests
      requires:
        - pip
        - pytest
        - pytest-asyncio
        - python-gmsh
        - scipy
      commands:
        - export UCX_MEM_EVENTS=no
        # workaround weird gmsh issue
        - export LD_PRELOAD=$PREFIX/lib/libGLdispatch.so.0  # [mpi == 'openmpi' and target_platform == 'linux-aarch64']
        - pytest -vs python/tests
        - MPIEXEC_TIMEOUT=300 mpiexec -n 2 pytest python/tests  # [mpi != 'openmpi']
        # openmpi bug in MPIEXEC_TIMEOUT
        - mpiexec --timeout=300 -n 2 pytest python/tests  # [mpi == 'openmpi']
        - pip check

about:
  home: https://github.com/jorgensd/dolfinx_mpc
  summary: Multi-point constraints with FEniCS-X
  description: |
    This library contains an add-on to FEniCSx enabling the possibilities of enforce multi-point constraints
  license: MIT
  license_family: MIT
  license_file: LICENSE
  doc_url: https://jorgensd.github.io/dolfinx_mpc
  dev_url: https://github.com/jorgensd/dolfinx_mpc

extra:
  feedstock-name: dolfinx_mpc
  recipe-maintainers:
    - jorgensd
    - minrk
